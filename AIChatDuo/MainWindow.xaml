<Window x:Class="AIChatDuo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AIChatDuo"
        mc:Ignorable="d"
        Title="AI 多角色对话 (Ollama)" Height="720" Width="1100"
        Background="#F8FAFC">
    <!-- 界面布局优化：将自动总结设置分为“策略”和“提示词与模板”两组；新增 TabControl 分离面板；运行时锁定输入控件 -->
    <Window.Resources>
        <!-- 主题配色 -->
        <SolidColorBrush x:Key="AccentBrush" Color="#10B981"/>
        <SolidColorBrush x:Key="HeaderBg" Color="#0F172A"/>
        <SolidColorBrush x:Key="HeaderFg" Color="#E5E7EB"/>
        <SolidColorBrush x:Key="CardBg" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BorderBrushColor" Color="#E5E7EB"/>
        <SolidColorBrush x:Key="TextBrush" Color="#111827"/>

        <!-- 转换器：运行时锁定输入控件 -->
        <local:InverseBooleanConverter x:Key="InverseBoolean"/>
        <local:IndexPlusOneConverter x:Key="IndexPlusOne"/>

        <!-- 扁平按钮样式 -->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="MinWidth" Value="96"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.92"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 输入/列表样式 -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="#F3F4F6"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="IsEnabled" Value="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Margin" Value="6,6,0,4"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <Style TargetType="ListBox">
            <Setter Property="Margin" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource CardBg}"/>
            <Setter Property="IsEnabled" Value="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
        </Style>

        <!-- 卡片容器样式 -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBg}"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- 小节标题样式 -->
        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,6"/>
        </Style>

        <!-- 设置分组容器样式 -->
        <Style x:Key="SettingsGroup" TargetType="Border">
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Background" Value="#FBFBFB"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- 顶部标题与操作区 -->
        <Grid Background="{StaticResource HeaderBg}" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Vertical" Margin="16,0" VerticalAlignment="Center">
                <TextBlock Text="AI 多角色对话 (Ollama)" Foreground="{StaticResource HeaderFg}" FontSize="20" FontWeight="Bold"/>
                <TextBlock Text="支持多角色轮流对话、每 N 轮自动总结、预设场景和模型选择" Foreground="#A7F3D0" FontSize="12"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,16,0">
                <Label Content="预设场景" Foreground="{StaticResource HeaderFg}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                <ComboBox Width="220" ItemsSource="{Binding Presets}" SelectedItem="{Binding SelectedPreset}" DisplayMemberPath="Name" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                <Button Content="应用预设" Click="ApplyPreset_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                <Button Content="{Binding RunButtonText}" Click="ToggleRun_Click"/>
                <Button Content="清空" Click="Clear_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                <Button Content="刷新模型" Click="RefreshModels_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                <Label Content="状态" Foreground="{StaticResource HeaderFg}" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding CurrentStatus}" Foreground="{StaticResource HeaderFg}" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!-- 主体区域：TabControl 分离 角色 / 总结 / 初始对话 设置 -->
        <Grid Grid.Row="1" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Style="{StaticResource CardStyle}">
                <TabControl>
                    <!-- 角色设置 Tab -->
                    <TabItem Header="角色设置">
                        <DockPanel>
                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,8">
                                <Button Content="添加角色" Click="AddRole_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                <Button Content="删除所选角色" Click="RemoveRole_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                            </StackPanel>
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ListBox x:Name="RolesList" ItemsSource="{Binding Roles}" SelectedItem="{Binding SelectedRole}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="#DDDDDD" BorderThickness="1" CornerRadius="6" Padding="8" Margin="0,0,0,8">
                                                <StackPanel>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="名称" Width="60" VerticalAlignment="Center"/>
                                                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="160" IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource InverseBoolean}}"/>
                                                        <TextBlock Text="模型" Width="50" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                                        <ComboBox Width="220" ItemsSource="{Binding DataContext.ModelNames, RelativeSource={RelativeSource AncestorType=Window}}" SelectedItem="{Binding Model}" IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource InverseBoolean}}"/>
                                                        <TextBlock Text="温度" Width="40" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                                        <Slider Width="140" Minimum="0" Maximum="2" TickFrequency="0.1" IsSnapToTickEnabled="True" Value="{Binding Temperature, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource InverseBoolean}}"/>
                                                        <TextBlock Text="{Binding Temperature, StringFormat=F2}" Width="50" VerticalAlignment="Center" Margin="6,0,0,0"/>
                                                    </StackPanel>
                                                    <TextBlock Text="系统提示词" Margin="0,6,0,2"/>
                                                    <TextBox TextWrapping="Wrap" AcceptsReturn="True" Height="80" Text="{Binding SystemPrompt, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource InverseBoolean}}"/>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ScrollViewer>
                        </DockPanel>
                    </TabItem>

                    <!-- 自动总结设置 Tab -->
                    <TabItem Header="自动总结设置">
                        <StackPanel>
                            <Border Style="{StaticResource SettingsGroup}">
                                <StackPanel>
                                    <TextBlock Text="自动总结 - 策略" Style="{StaticResource SectionHeader}"/>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Content="启用自动总结" IsChecked="{Binding AutoSummarizeEnabled}" Margin="0,0,12,0" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                        <TextBlock Text="每" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding SummaryInterval, UpdateSourceTrigger=PropertyChanged}" Width="40" Margin="6,0" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                        <TextBlock Text="轮总结" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                                        <TextBlock Text="总结模型" Width="60" VerticalAlignment="Center"/>
                                        <ComboBox Width="220" ItemsSource="{Binding ModelNames}" SelectedItem="{Binding SummaryModel}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                        <TextBlock Text="温度" Width="40" VerticalAlignment="Center" Margin="8,0,0,0"/>
                                        <Slider Width="140" Minimum="0" Maximum="2" TickFrequency="0.1" IsSnapToTickEnabled="True" Value="{Binding SummaryTemperature, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                        <TextBlock Text="{Binding SummaryTemperature, StringFormat=F2}" Width="50" VerticalAlignment="Center" Margin="6,0,0,0"/>
                                    </StackPanel>
                                    <CheckBox Content="总结后仅保留摘要（清空历史）" IsChecked="{Binding ReplaceHistoryWithSummary}" Margin="0,6,0,0" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                </StackPanel>
                            </Border>

                            <Border Style="{StaticResource SettingsGroup}">
                                <StackPanel>
                                    <TextBlock Text="自动总结 - 提示词与模板" Style="{StaticResource SectionHeader}"/>
                                    <TextBlock Text="系统提示词"/>
                                    <TextBox TextWrapping="Wrap" AcceptsReturn="True" Height="60" Text="{Binding SummarySystemPrompt, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                    <TextBlock Text="摘要指令/模板" Margin="0,6,0,0"/>
                                    <TextBox TextWrapping="Wrap" AcceptsReturn="True" Height="80" Text="{Binding SummaryInstruction, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </TabItem>

                    <!-- 初始对话设置 Tab -->
                    <TabItem Header="初始对话设置">
                        <DockPanel>
                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,8">
                                <Button Content="新增发言" Click="AddStartingMessage_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                <Button Content="删除选中" Click="RemoveStartingMessage_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                <Button Content="上移" Click="MoveStartingMessageUp_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                <Button Content="下移" Click="MoveStartingMessageDown_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                <Button Content="保存到预设" Click="SaveStartingMessages_Click" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                            </StackPanel>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <!-- 左侧：发言列表（使用数字编号） -->
                                <Border Grid.Column="0" Style="{StaticResource SettingsGroup}">
                                    <ListBox ItemsSource="{Binding StartingMessagesEditor}" SelectedItem="{Binding SelectedStartingMessage}" AlternationCount="100000">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <Border Background="#EEF2FF" CornerRadius="4" Padding="4" Margin="0,0,6,0" MinWidth="28" HorizontalAlignment="Left">
                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource IndexPlusOne}}" HorizontalAlignment="Center"/>
                                                    </Border>
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding Username}" FontWeight="Bold"/>
                                                        <TextBlock Text="{Binding Content}" TextTrimming="CharacterEllipsis" MaxWidth="240"/>
                                                    </StackPanel>
                                                </DockPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <GridSplitter Grid.Column="1" Width="6" HorizontalAlignment="Stretch" Background="#EEEEEE"/>

                                <!-- 右侧：详情编辑 -->
                                <Border Grid.Column="2" Style="{StaticResource SettingsGroup}">
                                    <StackPanel>
                                        <TextBlock Text="用户名（应与角色名一致）"/>
                                        <ComboBox ItemsSource="{Binding Roles}" SelectedValuePath="Name" DisplayMemberPath="Name" SelectedValue="{Binding SelectedStartingMessage.Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                        <TextBlock Text="内容" Margin="0,6,0,0"/>
                                        <TextBox TextWrapping="Wrap" AcceptsReturn="True" Height="120" Text="{Binding SelectedStartingMessage.Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolean}}"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </DockPanel>
                    </TabItem>
                </TabControl>
            </Border>

            <!-- 右侧消息区保持不变 -->
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#EEEEEE"/>
            <Border Grid.Column="2" Style="{StaticResource CardStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Messages}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="6" Padding="8" Margin="0,0,0,8" Background="#FAFAFA">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Username}" FontWeight="Bold"/>
                                                <TextBlock Text=" | " Margin="4,0"/>
                                                <TextBlock Text="{Binding Timestamp, StringFormat=yyyy-MM-dd HH:mm:ss}" Foreground="#777"/>
                                            </StackPanel>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Content}"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,8,0,0">
                        <TextBlock Text="轮次" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding RoundsCompleted}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
